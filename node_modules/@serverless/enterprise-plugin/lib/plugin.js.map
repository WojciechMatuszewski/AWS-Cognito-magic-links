{"version":3,"sources":["../../lib/plugin.js"],"names":["chalk","require","_","updateNotifier","configureFetchDefaults","openBrowser","sfePkgJson","errorHandler","logsCollection","login","logout","wrap","injectLogsIamRole","injectOutputOutputs","wrapClean","runPolicies","getCredentials","getAppUids","removeDestination","saveDeployment","createAndSetDeploymentUid","variables","generate","eventDict","configureDeployProfile","test","getDashboardUrl","setApiGatewayAccessLogFormat","interactiveCli","paramCommand","outputCommand","isAuthenticated","throwAuthError","userNodeVersion","Number","process","version","split","slice","ServerlessEnterprisePlugin","constructor","sls","state","secretsUsed","Set","service","org","tenant","cliOptions","processedInput","options","isDashboardMonitoringPreconfigured","Boolean","isDashboardAppPreconfigured","app","isDashboardMonitoringOverridenByCli","commands","usage","lifecycleEvents","enterprise","type","keys","join","shortcut","required","body","function","get","name","stage","region","list","autoStage","configDependent","isHidden","hooks","route","bind","variableResolvers","param","resolver","getValueFromDashboardParams","serviceName","isDisabledAtPrepopulation","secrets","output","getValueFromDashboardOutputs","pluginManager","plugins","plugin","values","command","Object","assign","missing","push","length","sfeEnabledHooks","match","RegExp","provider","variableSyntax","classes","Error","hook","enterpriseEnabled","includes","console","log","yellow","appUid","orgUid","studio","cli","logDeprecation","asyncInit","help","initializeServiceConfiguration","initializeProjectChoices","filter","value","missingConfigSettings","currentCommand","getProvider","isStandaloneExecutable","updates","pkg","interval","update","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst chalk = require('chalk');\nconst _ = require('lodash');\nconst updateNotifier = require('update-notifier');\nconst { configureFetchDefaults, openBrowser } = require('@serverless/platform-sdk');\nconst sfePkgJson = require('../package');\nconst errorHandler = require('./errorHandler');\nconst logsCollection = require('./logsCollection');\nconst login = require('./login');\nconst logout = require('./logout');\nconst wrap = require('./wrap');\nconst injectLogsIamRole = require('./injectLogsIamRole');\nconst injectOutputOutputs = require('./injectOutputOutputs');\nconst wrapClean = require('./wrapClean');\nconst runPolicies = require('./safeguards');\nconst getCredentials = require('./credentials');\nconst getAppUids = require('./appUids');\nconst removeDestination = require('./removeDestination');\nconst { saveDeployment, createAndSetDeploymentUid } = require('./deployment');\nconst variables = require('./variables');\nconst { generate, eventDict } = require('./generateEvent');\nconst { configureDeployProfile } = require('./deployProfile');\nconst { test } = require('./test');\nconst { getDashboardUrl } = require('./dashboard');\nconst setApiGatewayAccessLogFormat = require('./setApiGatewayAccessLogFormat');\nconst interactiveCli = require('./interactiveCli');\nconst paramCommand = require('./paramCommand');\nconst outputCommand = require('./outputCommand');\nconst isAuthenticated = require('./isAuthenticated');\nconst throwAuthError = require('./throwAuthError');\n\nconst userNodeVersion = Number(process.version.split('.')[0].slice(1));\n\n/*\n * Serverless Enterprise Plugin\n */\n\nclass ServerlessEnterprisePlugin {\n  constructor(sls) {\n    this.sls = sls;\n\n    // Defaults\n    this.state = {}; // Useful for storing data across hooks\n    this.state.secretsUsed = new Set();\n\n    // Backward compatibility with `tenant`\n    sls.service.org = sls.service.org || sls.service.tenant;\n    delete sls.service.tenant;\n\n    const {\n      service,\n      processedInput: { options: cliOptions },\n    } = this.sls;\n    service.isDashboardMonitoringPreconfigured = Boolean(service.org);\n    if (service.isDashboardMonitoringPreconfigured) {\n      service.isDashboardAppPreconfigured = Boolean(service.app);\n      service.isDashboardMonitoringOverridenByCli =\n        (cliOptions.org && cliOptions.org !== service.org) ||\n        (cliOptions.app && cliOptions.app !== service.app);\n    }\n    if (cliOptions.org) service.org = cliOptions.org;\n    if (cliOptions.app) service.app = cliOptions.app;\n\n    configureFetchDefaults();\n\n    // Configure commands available to logged out users\n    this.commands = {\n      'login': {\n        usage: 'Login or sign up for Serverless',\n        lifecycleEvents: ['login'],\n        enterprise: true,\n      },\n      'logout': {\n        usage: 'Logout from Serverless',\n        lifecycleEvents: ['logout'],\n        enterprise: true,\n      },\n      'generate-event': {\n        usage: 'Generate event',\n        lifecycleEvents: ['generate-event'],\n        options: {\n          type: {\n            usage: `Specify event type. ${_.keys(eventDict).join(', ')} are supported.`,\n            shortcut: 't',\n            required: true,\n          },\n          body: {\n            usage: 'Specify the body for the message, request, or stream event.',\n            shortcut: 'b',\n          },\n        },\n        enterprise: true,\n      },\n      'test': {\n        usage: 'Run HTTP tests',\n        lifecycleEvents: ['test'],\n        options: {\n          function: {\n            usage: 'Specify the function to test',\n            shortcut: 'f',\n          },\n          test: {\n            usage: 'Specify a specific test to run',\n            shortcut: 't',\n          },\n        },\n        enterprise: true,\n      },\n      'dashboard': {\n        usage: 'Open the Serverless dashboard',\n        lifecycleEvents: ['dashboard'],\n        enterprise: true,\n      },\n      'output': {\n        usage: '',\n        commands: {\n          get: {\n            usage: 'Get value of dashboard deployment profile parameter',\n            lifecycleEvents: ['get'],\n            options: {\n              name: { usage: 'Ouptut name' },\n              org: { usage: 'Dashboard org' },\n              app: { usage: 'Dashboard app' },\n              service: { usage: 'Dashboard service' },\n              stage: { usage: 'Dashboard stage' },\n              region: { usage: 'Region' },\n            },\n          },\n          list: {\n            usage: 'List all dashboard deployment profile parameters',\n            lifecycleEvents: ['list'],\n            options: {\n              org: { usage: 'Dashboard org' },\n              app: { usage: 'Dashboard app' },\n              service: { usage: 'Dashboard service' },\n              stage: { usage: 'Dashboard stage' },\n              region: { usage: 'Region' },\n            },\n          },\n        },\n      },\n      'param': {\n        usage: '',\n        commands: {\n          get: {\n            usage: 'Get value of dashboard service output',\n            lifecycleEvents: ['get'],\n            options: {\n              org: { usage: 'Dashboard org' },\n              app: { usage: 'Dashboard app' },\n              stage: { usage: 'Dashboard stage' },\n            },\n          },\n          list: {\n            usage: 'List all dashboard service outputs',\n            lifecycleEvents: ['list'],\n            options: {\n              org: { usage: 'Dashboard org' },\n              app: { usage: 'Dashboard app' },\n              stage: { usage: 'Dashboard stage' },\n            },\n          },\n        },\n      },\n      'studio': {\n        usage: 'Develop a Serverless application in the cloud.',\n        lifecycleEvents: ['studio'],\n        options: {\n          stage: {\n            usage: 'Stage to use for development.',\n            shortcut: 's',\n          },\n          region: {\n            usage: 'Region to use for development.',\n            shortcut: 'r',\n          },\n          autoStage: {\n            usage: 'If specified, generate a random stage. This stage will be removed on exit.',\n            shortcut: 'a',\n          },\n        },\n        enterprise: true,\n        configDependent: true,\n      },\n      // TODO: Remove 'dev' with next major\n      'dev': {\n        lifecycleEvents: ['dev'],\n        isHidden: true,\n      },\n    };\n    this.hooks = {\n      'login:login': this.route('login:login').bind(this),\n      'logout:logout': this.route('logout:logout').bind(this),\n      'generate-event:generate-event': this.route('generate-event:generate-event').bind(this),\n      'test:test': this.route('test:test').bind(this),\n      'dashboard:dashboard': this.route('dashboard:dashboard').bind(this),\n      'output:get:get': this.route('output:get:get').bind(this),\n      'output:list:list': this.route('output:list:list').bind(this),\n      'param:get:get': this.route('param:get:get').bind(this),\n      'param:list:list': this.route('param:list:list').bind(this),\n      // behavior is conditional on this.sls.enterpriseEnabled\n      'after:aws:deploy:finalize:cleanup': this.route('after:aws:deploy:finalize:cleanup').bind(\n        this\n      ),\n      'studio:studio': this.route('studio:studio').bind(this),\n      'dev:dev': this.route('dev:dev').bind(this),\n    };\n    this.variableResolvers = {\n      param: {\n        resolver: variables.getValueFromDashboardParams(this),\n        serviceName: 'Serverless Parameters',\n        isDisabledAtPrepopulation: true,\n      },\n      secrets: {\n        resolver: variables.getValueFromDashboardParams(this),\n        serviceName: 'Serverless Secrets',\n        isDisabledAtPrepopulation: true,\n      },\n      output: {\n        resolver: variables.getValueFromDashboardOutputs(this),\n        serviceName: 'Serverless Outputs',\n        isDisabledAtPrepopulation: true,\n      },\n      state: {\n        resolver: variables.getValueFromDashboardOutputs(this),\n        serviceName: 'Serverless Outputs',\n        isDisabledAtPrepopulation: true,\n      },\n    };\n\n    // set allowed plugin options\n    for (const plugin of sls.pluginManager.plugins) {\n      if (plugin.constructor.name === 'InteractiveCli' && plugin.commands) {\n        if (!plugin.commands.interactiveCli.options) {\n          plugin.commands.interactiveCli.options = {};\n        }\n        plugin.commands.interactiveCli.options.app = { usage: 'Dashboard app' };\n        plugin.commands.interactiveCli.options.org = { usage: 'Dashboard org' };\n      } else if (plugin.commands) {\n        for (const command of _.values(plugin.commands)) {\n          if (command.configDependent) {\n            command.options.app = { usage: 'Dashboard app' };\n            command.options.org = { usage: 'Dashboard org' };\n          }\n        }\n      }\n    }\n    // Also adding in commands object of plugin man bc generating help doesn't reread the plugin\n    // itself\n    for (const command of _.values(sls.pluginManager.commands)) {\n      if (command.configDependent) {\n        command.options.app = { usage: 'Dashboard app' };\n        command.options.org = { usage: 'Dashboard org' };\n      }\n    }\n\n    // Add interactive CLI hooks\n    Object.assign(this.hooks, interactiveCli(this));\n\n    // Check if dashboard is configured\n    const missing = [];\n    if (!sls.service.org) {\n      missing.push('org');\n    }\n    if (!sls.service.app) {\n      missing.push('app');\n    }\n    if (!sls.service.service) {\n      missing.push('service');\n    }\n    if (missing.length > 0) {\n      this.sfeEnabledHooks = {};\n    } else {\n      if (\n        sls.service.app.match(new RegExp(sls.service.provider.variableSyntax)) ||\n        sls.service.org.match(new RegExp(sls.service.provider.variableSyntax))\n      ) {\n        throw new this.sls.classes.Error(\n          '\"app\" and \"org\" in your serverless config can not use the variable system'\n        );\n      }\n\n      this.sfeEnabledHooks = {\n        'before:package:createDeploymentArtifacts': this.route(\n          'before:package:createDeploymentArtifacts'\n        ).bind(this),\n        'after:package:createDeploymentArtifacts': this.route(\n          'after:package:createDeploymentArtifacts'\n        ).bind(this),\n        'before:deploy:function:packageFunction': this.route(\n          'before:deploy:function:packageFunction'\n        ).bind(this),\n        'after:deploy:function:packageFunction': this.route(\n          'after:deploy:function:packageFunction'\n        ).bind(this),\n        'before:invoke:local:invoke': this.route('before:invoke:local:invoke').bind(this),\n        'before:aws:package:finalize:saveServiceState': this.route(\n          'before:aws:package:finalize:saveServiceState'\n        ).bind(this),\n        'before:deploy:deploy': this.route('before:deploy:deploy').bind(this),\n        'before:aws:deploy:deploy:createStack': this.route(\n          'before:aws:deploy:deploy:createStack'\n        ).bind(this),\n        'after:deploy:finalize': this.route('after:deploy:finalize').bind(this),\n        'after:deploy:deploy': this.route('after:deploy:deploy').bind(this),\n        'before:info:info': this.route('before:info:info').bind(this),\n        'after:info:info': this.route('after:info:info').bind(this),\n        'before:logs:logs': this.route('before:logs:logs').bind(this),\n        'before:metrics:metrics': this.route('before:metrics:metrics').bind(this),\n        'before:remove:remove': this.route('before:remove:remove').bind(this),\n        'after:remove:remove': this.route('after:remove:remove').bind(this),\n        'after:invoke:local:invoke': this.route('after:invoke:local:invoke').bind(this),\n        'before:offline:start:init': this.route('before:offline:start:init').bind(this),\n        'before:step-functions-offline:start': this.route(\n          'before:step-functions-offline:start'\n        ).bind(this),\n      };\n      // Set Plugin hooks for authenticated Enteprise Plugin features\n      Object.assign(this.hooks, this.sfeEnabledHooks);\n    }\n  }\n\n  /*\n   * Route\n   */\n\n  route(hook) {\n    return async () => {\n      // throw an error if SFE is disabled and running an SFE only hook\n      if (!this.sls.enterpriseEnabled && _.keys(this.sfeEnabledHooks).includes(hook)) {\n        throwAuthError(this.sls);\n      }\n\n      switch (hook) {\n        case 'before:package:createDeploymentArtifacts':\n          Object.assign(\n            this.sls.service,\n            await getAppUids(this.sls.service.org, this.sls.service.app)\n          );\n          createAndSetDeploymentUid(this);\n          await wrap(this);\n          await injectLogsIamRole(this);\n          await injectOutputOutputs(this);\n          await setApiGatewayAccessLogFormat(this);\n          break;\n        case 'after:package:createDeploymentArtifacts':\n          await wrapClean(this);\n          break;\n        case 'before:deploy:function:packageFunction':\n          createAndSetDeploymentUid(this);\n          await wrap(this);\n          break;\n        case 'after:deploy:function:packageFunction':\n          await wrapClean(this);\n          break;\n        case 'before:aws:package:finalize:saveServiceState':\n          await getCredentials(this);\n          await logsCollection(this);\n          break;\n        case 'before:deploy:deploy':\n          this.enterprise = {\n            errorHandler: errorHandler(this), // V.1 calls this when it crashes\n          };\n          await runPolicies(this);\n          break;\n        case 'before:aws:deploy:deploy:createStack':\n          break;\n        case 'after:aws:deploy:finalize:cleanup':\n          if (this.sls.enterpriseEnabled) {\n            await saveDeployment(this);\n          }\n          break;\n        case 'before:info:info':\n          await getCredentials(this);\n          break;\n        case 'after:info:info':\n          // eslint-disable-next-line no-console\n          console.log(\n            chalk.yellow(\n              `Run \"serverless dashboard\" to open the dashboard or visit ${getDashboardUrl(this)}`\n            )\n          );\n          break;\n        case 'dashboard:dashboard':\n          openBrowser(getDashboardUrl(this));\n          break;\n        case 'before:logs:logs':\n          await getCredentials(this);\n          break;\n        case 'before:metrics:metrics':\n          await getCredentials(this);\n          break;\n        case 'before:remove:remove':\n          await getCredentials(this);\n          break;\n        case 'after:remove:remove':\n          Object.assign(\n            this.sls.service,\n            await getAppUids(this.sls.service.org, this.sls.service.app)\n          );\n          await removeDestination(this);\n          await saveDeployment(this, true);\n          break;\n        case 'before:invoke:local:invoke':\n          Object.assign(this.sls.service, {\n            appUid: '000000000000000000',\n            orgUid: '000000000000000000',\n          });\n          await wrap(this);\n          break;\n        case 'after:invoke:local:invoke':\n          await wrapClean(this);\n          break;\n        case 'before:offline:start:init':\n          // await wrap(this)\n          break;\n        case 'before:step-functions-offline:start':\n          // await wrap(this)\n          break;\n        case 'login:login':\n          await login(this);\n          break;\n        case 'logout:logout':\n          await logout(this);\n          break;\n        case 'studio:studio':\n          if (userNodeVersion >= 8) {\n            const studio = require('./studio');\n            await studio(this);\n          } else {\n            this.sls.cli.log('Node 8 or higher is required to run Serverless Studio.');\n          }\n          break;\n        case 'dev:dev':\n          this.sls.cli.log('The command \"dev\" has been renamed to \"studio\".');\n          if (this.sls.logDeprecation) {\n            this.sls.logDeprecation(\n              'DASHBOARD_DEV_COMMAND',\n              '\"dev\" command will be removed with next major release'\n            );\n          }\n          break;\n        case 'generate-event:generate-event':\n          await generate(this);\n          break;\n        case 'test:test':\n          await test(this);\n          break;\n        case 'param:get:get':\n          await paramCommand.get(this);\n          break;\n        case 'param:list:list':\n          await paramCommand.list(this);\n          break;\n        case 'output:get:get':\n          await outputCommand.get(this);\n          break;\n        case 'output:list:list':\n          await outputCommand.list(this);\n          break;\n\n        default:\n      }\n    };\n  }\n\n  async asyncInit() {\n    if (\n      this.sls.processedInput.options['help-interactive'] ||\n      this.sls.processedInput.options.help\n    ) {\n      return;\n    }\n    if (this.sls.interactiveCli && this.sls.interactiveCli.initializeServiceConfiguration) {\n      // Filter available projects to create if there's an intention to configure dashboard\n      if (this.sls.processedInput.options.org || this.sls.processedInput.options.app) {\n        this.sls.interactiveCli.initializeServiceConfiguration.initializeProjectChoices = this.sls.interactiveCli.initializeServiceConfiguration.initializeProjectChoices.filter(\n          ({ value }) => ['aws-nodejs', 'aws-python3', 'aws-python'].includes(value)\n        );\n      }\n    }\n\n    const missingConfigSettings = [];\n    if (!this.sls.service.org) {\n      missingConfigSettings.push('org');\n    }\n    if (!this.sls.service.app) {\n      missingConfigSettings.push('app');\n    }\n    if (!this.sls.service.service) {\n      missingConfigSettings.push('service');\n    }\n    const currentCommand = this.sls.processedInput.commands[0];\n    if (\n      missingConfigSettings.length === 0 &&\n      isAuthenticated() &&\n      !['login', 'logout', 'generate-event'].includes(currentCommand)\n    ) {\n      this.sls.enterpriseEnabled = true;\n    }\n    // this.provider, intentionally not set in constructor, as then it affects plugin validation\n    // in serverless, which will discard plugin when command not run in service context:\n    // https://github.com/serverless/serverless/blob/f0ccf6441ace7b5cc524e774f025a39c3c0667f2/lib/classes/PluginManager.js#L78\n    this.provider = this.sls.getProvider('aws');\n    if (this.sls.enterpriseEnabled) {\n      if (!this.sls.isStandaloneExecutable && !this.sls.interactiveCli) {\n        const updates = updateNotifier({ pkg: sfePkgJson, interval: 1 });\n        if (updates.update) {\n          this.sls.cli.log(\n            'An updated version of the Serverless Dashboard is available. ' +\n              'Please upgrade by running `npm i -g serverless`'\n          );\n        }\n      }\n      await configureDeployProfile(this);\n    }\n  }\n}\n\nmodule.exports = ServerlessEnterprisePlugin;\n"],"file":"plugin.js"}